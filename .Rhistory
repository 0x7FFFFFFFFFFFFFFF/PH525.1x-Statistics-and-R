install.packages("devtools")
library(devtools)
install_github("genomicsclass/dagdata")
install_github("ririzarr/rafalib")
install.packages("swirl")
library(swirl)
swirl()
swirl()
5+7
x <- 5+7
x
y <= x - 3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
z
c(z, 555, z)
1 + 2
z * 2
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_dev <- z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
version
swirl()
version
v <- (2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
v <- c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
v
mean(c(1, 2, 7, 1))
11/4
median(c(1, 2, 7, 1))
v
mean(v)
sum
total
total <- 0
for(i in 1:25) {total <- total + i}
total
for(i in 1:25) {total <- total + i^2}
total
1:25
for(i in 1:25) {i}
for(i in 1:25) {print(i)}
for(i in 1:25) {print(i^2)}
total <- 0
for(i in 1:25) {total <- total + i^2}
total
cars
nrow(cars)
nrow(cars)
ncol(cars)
ncol(cars)
v
ncol(v)
summary(v)
summary(cars
)
dim(cars)
dim(v)
cars
names(cars)
names(cars)[2]
car[,2]
cars[,2]
mean(cars[,2])
which(cars$dist, 85)
which(cars$dist == 85)
bt <- c("A", "B", "AB", "O")
bt <- factor(bt)
bt
bt[0]
bt[1]
bt[2]
bt[3]
bt[4]
bt <- factor(c("A", "B", "O", AB"), ordered = TRUE)
bt <- factor(c("A", "B", "O", AB"), ordered = TRUE))
bt <- factor(c("A", "B", "O", AB"), ordered = TRUE))
bt <- factor(c("A", "B", "O", AB"), ordered = TRUE)
bt <- factor(c("A", "B", "O", "AB"), ordered = TRUE)
bt
str(bt)
bt <- factor(c("A", "B", "O", "AB"), levels = c(1, 2, 3, 4), ordered = TRUE)
str(bt)
bt <- factor(c("A", "B", "O", "AB"), levels = c(1, 2, 3, 4), ordered = TRUE)
str(bt)
bt <- f actor(c("A", "B", "O", "AB", "A"), levels = c("A", "B", "AB", "O"), sordered = TRUE)
bt <- factor(c("A", "B", "O", "AB", "A"), levels = c("A", "B", "AB", "O"), sordered = TRUE)
bt <- factor(c("A", "B", "O", "AB", "A"), levels = c("A", "B", "AB", "O"), ordered = TRUE)
str(bt)
bt <- factor(c("A", "B", "O", "AB", "A"), levels = c("A", "B", "AB", "O"), labels = c("M", "N", "O", "P"), ordered = TRUE)
str(bt)
bt <- factor(c("A", "B", "O", "AB", "A"), levels = c("A", "B", "AB"), labels = c("M", "N", "O", "P"), ordered = TRUE)
bt <- factor(c("A", "B", "O", "AB", "A"), levels = c("O", A", "B", "AB"), labels = c("M", "N", "O", "P"), ordered = TRUE)
bt <- factor(c("A", "B", "O", "AB", "A"), levels = c("O", "A", "B", "AB"), labels = c("M", "N", "O", "P"), ordered = TRUE)
str(bt)
levels(bt)
levels(bt)
bt <- factor(c("A", "B", "O", "AB"), levels = c(1, 2, 3, 4), ordered = TRUE)
str(bt)
levels(bt)
bt <- factor(c("A", "B", "O", "AB"), ordered = TRUE)
str(bt)
levels(bt)
student.names <- c("Raj","Rahul","Priya","Poonam")
student.weights <- c( 60.5, 72.5 , 45.2,  47.5)
student.genders <- factor(c("Male","Male","Female","Female"))
student.physics.marks <- c( 70L , 75L , 80L,  85L)
student.chemistry.marks <- c(60L, 70L, 85L, 70L)
student1 <- list(student.names[1], student.weights[1], student.genders[1],
student.physics.marks[1], student.chemistry.marks[1])
student1[1] #Single brackets [] return element of same type
typeof(student1[1])
student1[[1]] #double brackets [[]] return the object in its own type
student1[1:3] #Access multiple elements using index
student1[[1:3]]
a <- c(10, 20, 30, 40)
a[-3]
View(a)
student.names <- c("Raj","Rahul","Priya","Poonam")
student.weights <- c( 60.5, 72.5 , 45.2,  47.5)
student.genders <- factor(c("Male","Male","Female","Female"))
student.physics.marks <- c( 70L , 75L , 80L,  85L)
student.chemistry.marks <- c(60L, 70L, 85L, 70L)
students <- data.frame(student.names,student.weights,student.genders,
student.physics.marks, student.chemistry.marks)
students
View(students)
typeof(students)
str(students)
View(students)
student.physics.marks, student.chemistry.marks,
students <- data.frame(student.names,student.weights,student.genders,
student.physics.marks, student.chemistry.marks,
stringsAsFactors = FALSE)
str(students)
student.names <- c("Raj","Rahul","Priya","Poonam")
student.weights <- c( 60.5, 72.5 , 45.2,  47.5)
student.genders <- factor(c("Male","Male","Female","Female"))
student.physics.marks <- c( 70L , 75L , 80L,  85L)
student.chemistry.marks <- c(60L, 70L, 85L, 70L)
students <- data.frame(student.names,student.weights,student.genders,
student.physics.marks, student.chemistry.marks, stringsAsFactors = FALSE)
students
students[1] #Single brackets [] return element of same type
typeof(students[1])
str(students[1])
students[[1]] #double brackets [[]] return the object in its own type
typeof(students[[1]])
str(students[[1]])
class(students[[1]])
students[["student.names"]] #double brackets [[]] return the object in its own type
student.physics.marks <- c( 70L , 75L , 80L,  85L)
student.chemistry.marks <- c(60L, 70L, 85L, 70L)
student.marks <-rbind(student.physics.marks , student.chemistry.marks)
student.marks
student.marks <-cbind(student.physics.marks , student.chemistry.marks)
student.marks
rownames(student.marks) <- c("Raj","Rahul","Priya","Poonam")
student.marks
str(student.marks)
student.marks <- matrix(c( 70L , 75L , 80L,  85L, 60L, 70L, 85L, 70L),ncol=2,nrow=4)
student.marks
student.marks <- matrix(c( 70L , 75L , 80L,  85L, 60L, 70L, 85L, 70L),ncol=4,nrow=2
,byrow=TRUE)
student.marks
student.marks <- matrix(c( 70L , 75L , 80L,  85L, 60L, 70L, 85L, 70L),ncol=2,nrow=4)
student.marks
student.marks <- matrix(c( 70L , 75L , 80L,  85L, 60L, 70L, 85L, 70L),ncol=2,nrow=4, byrow = TRUE)
student.marks
getwd()
getwd()
setwd("~/my_projects/PH525.1x-Statistics-and-R/")
getwd()
url <- "https://github.com/justmarkham/dplyr-tutorial/raw/master/dplyr-tutorial.Rmd"
download.file(url, basename(url))
library(dplyr)
install.packages("dplyr")
library(dplyr)
suppressMessages(library(dplyr))
library(hflights)
install.packages("hflights")
library(hflights)
data(hflights)
head(hflights)
str(hflights)
flights <- tbl_df(hflights)
str(hflights)
flights
print(flights, n=20)
data.frame(head(flights))
flights[flights$Month==1 & flights$DayofMonth==1, ]
filter(flights, Month==1, DayofMonth==1)
flights[flights$Month==1 & flights$DayofMonth==1, ]
filter(flights, Month==1, DayofMonth==1)
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA")
filter(flights, UniqueCarrier %in% c("AA", "UA"))
flights[, c("DepTime", "ArrTime", "FlightNum")]
select(flights, DepTime, ArrTime, FlightNum)
select(flights, Year:DayofMonth, contains("Taxi"), contains("Delay"))
filter(select(flights, UniqueCarrier, DepDelay), DepDelay > 60)
flights %>%
select(UniqueCarrier, DepDelay) %>%
filter(DepDelay > 60)
x1 <- 1:5; x2 <- 2:6
sqrt(sum((x1-x2)^2))
(x1-x2)^2 %>% sum() %>% sqrt()
flights[order(flights$DepDelay), c("UniqueCarrier", "DepDelay")]
flights[order(flights$DepDelay, decreasing = TRUE), c("UniqueCarrier", "DepDelay")]
flights[order(flights$DepDelay), c("UniqueCarrier", "DepDelay")]
flights[order(flights$DepDelay, decreasing = TRUE), c("UniqueCarrier", "DepDelay")]
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(Year)
data.frame(head(flights))
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DayOfWeek)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(UniqueCarrier)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(desc(DepDelay))
flights$Speed <- flights$Distance / flights$AirTime*60
flights[, c("Distance", "AirTime", "Speed")]
flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance/AirTime*60)
flights <- flights %>% mutate(Speed = Distance/AirTime*60)
d <- c(1, 4, 7, 2, 6)
m <- mean(d)
m
d - m
d
m
d - m
(d - m)^2
sum((d - m)^2)
d - mean(d)
d - mean(d) %>% power(2)
(d - mean(d))^2
(d - mean(d))^2 / length(d)
(d - mean(d))^2 %>% sum()
(d - mean(d))^2 %>% sum() / length(d)
26/5
(d - mean(d))^2 %>% sum() / length(d) %>% sqrt()
(d - mean(d))^2 %>% sum()
temp <- (d - mean(d))^2 %>% sum()
temp
temp/5
temp/5 %>% sqrt(
temp/5 %>% sqrt()
;asdfg
temp/5 %>% sqrt()
temp/5
sqrt(5.2)
temp/5 %>% sqrt()
(temp/5) %>% sqrt()
(d - mean(d))^2 %>% sum() /length(d)
(d - mean(d))^2 %>% sum() /length(d) %>% sqrt()
((d - mean(d))^2 %>% sum() /length(d)) %>% sqrt()
sd(d)
y <- c(13,7,5,12,9,15,6,11,9,7,12)
range(y)
a <- c(23,25,28,28,32,33,35)
b <- c(16,24,26,26,26,27,28)
plot(a, b)
plot(a)
plot(b)
dotchart(c(3, 4, 4, 8))
dotchart(c(4, 6, 3, 6, 5, 5))
dotchart(c(4, 6, 3, 6, 5, 5))
dotchart(c(4, 6, 3, 6, 5, 5))
mode(c(1,2, 3, 1))
